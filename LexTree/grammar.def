# Statements Grammar for Lex Language
program        → declaration* EOF ;

declaration    → variable_declaration
               | statement ;

statement      → exprStmt 
               | printStmt ;

exprStmt       → expression ";" ;
printStmt      → "print" expression ";" ;

# Expressions Grammar for Lex Language
expression     → comma ;
comma          → conditional ( "," conditional )* ;
conditional    → equality ( "?" expression ":" conditional )? ;
equality       → comparison ( ( "!=" | "==" ) comparison )* ;
comparison     → term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
term           → factor ( ( "-" | "+" ) factor )* ;
factor         → unary ( ( "/" | "*" ) unary )* ;
unary          → ( "!" | "-" ) unary
               | primary ;
primary        → NUMBER | STRING | "true" | "false" | "nil" | IDENTIFIER | "(" expression ")" ;